<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd   
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
	default-autowire="byType">

	<context:annotation-config></context:annotation-config>
	<context:component-scan base-package="com.sohu.contract.service.impl.*" />
	<context:component-scan base-package="com.sohu.contract.**.cache" />
	<context:component-scan base-package="com.sohu.contract.**.dao" />

	<!--启动spring注解功能 -->
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- 数据源及事务配置开始 -->
	<bean id="txManagerSystem"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="Advice" transaction-manager="txManagerSystem">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"
				no-rollback-for="com.sohu.contract.common.exception.NoRollbackException"
				rollback-for="com.sohu.contract.common.exception.BusinessException" />
			<tx:method name="update*" propagation="REQUIRED"
				no-rollback-for="com.sohu.contract.common.exception.NoRollbackException"
				rollback-for="com.sohu.contract.common.exception.BusinessException" />
			<tx:method name="add*" propagation="REQUIRED"
				no-rollback-for="com.sohu.contract.common.exception.NoRollbackException"
				rollback-for="com.sohu.contract.common.exception.BusinessException" />
			<tx:method name="insert*" propagation="REQUIRED"
				no-rollback-for="com.sohu.contract.common.exception.NoRollbackException"
				rollback-for="com.sohu.contract.common.exception.BusinessException" />
			<tx:method name="remove*" propagation="REQUIRED"
				no-rollback-for="com.sohu.contract.common.exception.NoRollbackException"
				rollback-for="com.sohu.contract.common.exception.BusinessException" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="baseServiceMethodsSys"
			expression="execution(* com.sohu.contract.service.impl..*.*(..))" />
		<aop:advisor advice-ref="Advice" pointcut-ref="baseServiceMethodsSys" />
	</aop:config>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/sqlmap/sqlmap-config.xml" />
	</bean>
	<!-- 数据源及事务配置结束 -->
	
	<!-- 数据源及事务配置开始 (服务)-->
	<bean id="txManagerService"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceService" />
	</bean>

	<tx:advice id="AdviceService" transaction-manager="txManagerService">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"
				no-rollback-for="com.sohu.contract.common.exception.NoRollbackException"
				rollback-for="com.sohu.contract.common.exception.BusinessException" />
			<tx:method name="update*" propagation="REQUIRED"
				no-rollback-for="com.sohu.contract.common.exception.NoRollbackException"
				rollback-for="com.sohu.contract.common.exception.BusinessException" />
			<tx:method name="add*" propagation="REQUIRED"
				no-rollback-for="com.sohu.contract.common.exception.NoRollbackException"
				rollback-for="com.sohu.contract.common.exception.BusinessException" />
			<tx:method name="insert*" propagation="REQUIRED"
				no-rollback-for="com.sohu.contract.common.exception.NoRollbackException"
				rollback-for="com.sohu.contract.common.exception.BusinessException" />
			<tx:method name="remove*" propagation="REQUIRED"
				no-rollback-for="com.sohu.contract.common.exception.NoRollbackException"
				rollback-for="com.sohu.contract.common.exception.BusinessException" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="baseServiceMethodsService"
			expression="execution(* com.sohu.contract.service.impl..*.*(..))" />
		<aop:advisor advice-ref="AdviceService" pointcut-ref="baseServiceMethodsService" />
	</aop:config>
	<bean id="sqlSessionFactoryService" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceService" />
		<property name="configLocation" value="classpath:/sqlmap/sqlmap-configService.xml" />
	</bean>
	<!-- 数据源及事务配置结束 -->
	
	<!-- 验证码 -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">yes</prop>
						<prop key="kaptcha.border.color">105,179,90</prop>
						<prop key="kaptcha.textproducer.font.color">blue</prop>
						<prop key="kaptcha.image.width">140</prop>
						<prop key="kaptcha.image.height">50</prop>
						<prop key="kaptcha.textproducer.font.size">40</prop>
						<prop key="kaptcha.session.key">code</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
</beans>
